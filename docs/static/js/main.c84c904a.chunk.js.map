{"version":3,"sources":["components/types/types.js","reducers/iuReducer.js","reducers/notesReducer.js","components/store/store.js","reducers/authReducer.js","firebase/firebase-config.js","actions/iu.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","iu","map","note","id","filter","store","createStore","applyMiddleware","thunk","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","googleAuthProvider","GoogleAuthProvider","setError","err","uiFinishLoading","loadNotes","a","getDocs","collection","noteSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteTofiresotre","updateDoc","doc","refreshNote","Swal","fire","deleteNote","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","catch","e","console","log","message","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesAppBar","useDispatch","useSelector","className","style","display","onChange","files","title","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","deleteDoc","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","error","newNote","Date","getTime","addDoc","JournalScreen","LoginScreen","onSubmit","preventDefault","autoComplete","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","currentUser","startRegisterWithEmailPasswordName","AuthRouter","exact","path","element","Test","isAuthenticated","Component","component","props","PrivateRoute","rest","PublicRoute","AppRouter","checking","setchecking","isLoggedin","setisLoggedin","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c84c904a.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set Active Note',\r\n    notesLoad: '[Notes] Load Notes',\r\n    notesUpdated: '[Notes] Updated Note',\r\n    notesFileUrl: '[Notes] Updated Image Url',\r\n    notesDelete: '[Notes] Delete Note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","// import { initializeApp } from \"@firebase/app\"\r\nimport { types } from \"../components/types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n                }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../components/types/types\";\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n};\r\n\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    ...state.notes,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note)\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note =>\r\n                    note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: [],\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore,applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { auhtReducer } from \"../../reducers/authReducer\";\r\nimport { uiReducer } from \"../../reducers/iuReducer\";\r\nimport {notesReducer} from \"../../reducers/notesReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: auhtReducer,\r\n    iu: uiReducer,\r\n    notes: notesReducer,\r\n\r\n\r\n})\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\n\r\n","import { types } from \"../components/types/types\";\r\n\r\nexport const auhtReducer =(state={}, action)=>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n            case types.logout:\r\n                return{}\r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDSErFc3KR4ipXpdNfHuo_-f5o1idnbWsM\",\r\n    authDomain: \"journal-app-reactjs-ee501.firebaseapp.com\",\r\n    projectId: \"journal-app-reactjs-ee501\",\r\n    storageBucket: \"journal-app-reactjs-ee501.appspot.com\",\r\n    messagingSenderId: \"820723611305\",\r\n    appId: \"1:820723611305:web:6ab2a2a335eb7cdfa41bb8\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\n\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n}","import { types } from \"../components/types/types\";\r\n\r\nexport const setError=(err)=>{\r\n    return{\r\n        type: types.uiSetError,\r\n        payload: err\r\n        \r\n    }\r\n}\r\n\r\nexport const RemoveError=()=>({\r\n    type: types.uiRemoveError,\r\n\r\n})\r\n\r\nexport const uiStartLoading =()=>{\r\n    return {\r\n        type: types.uiStartLoading\r\n    }\r\n}\r\n\r\nexport const uiFinishLoading =()=>{\r\n    return {\r\n        type: types.uiFinishLoading\r\n    }\r\n}\r\n","import { db } from \"../firebase/firebase-config.js\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n    // const noteSnap= await db.collection(`${uid}/journal/notes`).get();\r\n    const noteSnap= await getDocs(collection(db, `${uid}/journal/notes`));\r\n    const notes = [];\r\n    noteSnap.forEach(snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n    });\r\n    \r\n    return notes;\r\n\r\n}","\r\nexport const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dpscwwjmp/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journalapp');\r\n    formData.append('file', file);\r\n\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config.js\";\r\nimport { collection, addDoc, doc, updateDoc, deleteDoc } from \"firebase/firestore\";\r\nimport { types } from \"../components/types/types.js\";\r\nimport { loadNotes } from \"../helpers/loadNotes.js\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload.js\";\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n        }\r\n        const doc = await addDoc(collection(db, `${uid}/journal/notes`), newNote);\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n\r\n    }\r\n}\r\n\r\n//react-journalapp\r\nexport const activeNote = (id, note) => (\r\n    {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n);\r\nexport const addNewNote = (id, note) => (\r\n    {\r\n        type: types.notesAddNew,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n);\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setNotes = (notes) => ({\r\n\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteTofiresotre = { ...note };\r\n        delete noteTofiresotre.id;\r\n        await updateDoc(doc(db, `/${uid}/journal/notes/${note.id}`), noteTofiresotre);\r\n\r\n        dispatch(refreshNote(note.id, note));\r\n        Swal.fire('Saved!', 'Your note has been saved', 'success');\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: { id, note }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote } = getState().notes;\r\n        Swal.fire({\r\n\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote));\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        await deleteDoc(doc(db, `/${uid}/journal/notes/${id}`));\r\n        dispatch(deleteNote(id));\r\n        Swal.fire('Deleted!', 'Your note has been deleted', 'success');\r\n    }\r\n\r\n}\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { getAuth, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { types } from '../components/types/types';\r\nimport { googleAuthProvider } from '../firebase/firebase-config';\r\nimport { uiFinishLoading, uiStartLoading } from './iu';\r\nimport { noteLogout } from './notes';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        //start\r\n        dispatch(uiStartLoading())\r\n        const auth = getAuth();\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(uiFinishLoading());\r\n                //end\r\n            }).catch(e => {\r\n                console.log(e.message);\r\n                dispatch(uiFinishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            }\r\n            )\r\n\r\n    }\r\n\r\n    // dispatch(login(123, 'Pedro'));\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        const auth = getAuth();\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async ({ user }) => {\r\n                await updateProfile(auth.currentUser, { displayName: name })\r\n                // console.log(user);\r\n                dispatch(login(user.uid, user.displayName));\r\n\r\n            }).catch(\r\n                e => {\r\n                    console.log(e);\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\nexport const login = (uid, displayName) =>\r\n({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        const auth = getAuth();\r\n        signOut(auth).then(() => {\r\n            dispatch(logout());\r\n            dispatch(noteLogout());\r\n            // Sign-out successful.\r\n        }).catch((error) => {\r\n            // An error happened.\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n})\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes);\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>26 de Abril</span>\r\n            <input\r\n                id='fileSelector'\r\n                type=\"file\"\r\n                name='file'\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button className=\"btn\"\r\n                    onClick={handlePictureClick}>\r\n                    Picture\r\n                </button>\r\n                <button className=\"btn\"\r\n                    onClick={handleSave}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { active: note } = useSelector(state => state.notes);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues }));\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    value={title}\r\n                    name=\"title\"\r\n                    onChange={handleInputChange} />\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    name=\"body\"\r\n                    onChange={handleInputChange}>\r\n\r\n                </textarea>\r\n                {\r\n                    (note.url)\r\n                    && (<div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"Arbol\" />\r\n\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <button className='btn btn-danger'\r\n                onClick={handleDelete}>\r\n                Eliminar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Selected something\r\n                <br />\r\n                or create an entry            \r\n                </p>\r\n\r\n                <i className=\"far fa-star fa4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id,\r\n            { date, title, body, url }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer\"\r\n            onClick={handleEntryClick}>\r\n            {\r\n                url &&\r\n                <div className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}>\r\n\r\n                </div>}\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal_entry-tittle\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal_entry-content\">\r\n                    {body}\r\n                </p>\r\n\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> {noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n    const { notes } = useSelector(state => state.notes);\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const handleLogOut = () => {\r\n        dispatch(startLogout());\r\n\r\n    }\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\" />\r\n                    <span>{name}</span>\r\n                </h3>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogOut}\r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"journal__new-entry\"\r\n                onClick={handleAddNew}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n\r\n            </div>\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active) \r\n                    ?(<NoteScreen />)\r\n                    :(<NothingSelected/> )\r\n\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state => state.iu)\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'Nicole@prueba.com',\r\n        password: '123456'\r\n    })\r\n    const {email, password} =formValues; \r\n    \r\n    const handleLogin =(e) =>{\r\n        e.preventDefault()\r\n        dispatch(startLoginEmailPassword(email, password));\r\n\r\n    }\r\n    const handleGoogleLogin =()=>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__tittle\">Login Screen</h3>\r\n            <form onSubmit={handleLogin}>\r\n              \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n            \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/auth/register\"\r\n                className=\"link\">\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RemoveError, setError } from '../../actions/iu'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { msgError } = useSelector(state => state.iu);\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('name is required'))\r\n            // console.log('name is required');\r\n            return false\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'))\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each others'))\r\n            return false;\r\n        }\r\n        dispatch(RemoveError())\r\n        return true;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__tittle\">Register Screen</h3>\r\n            <form onSubmit={handleRegister}>\r\n                {\r\n                    msgError &&\r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n                <Link to=\"/auth/login\"\r\n                    className=\"link\">\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\n","import {\r\n    Route,\r\n    Routes\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\nexport const AuthRouter = () => {\r\n\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n\r\n                <Routes>\r\n                    <Route\r\n                        exact\r\n                        path=\"/login\"\r\n                        element={<LoginScreen />} />\r\n                    <Route\r\n                        exact\r\n                        path=\"/register\"\r\n                        element={<RegisterScreen />} />\r\n                    {/* <Navigate to=\"/auth/register\" />  */}\r\n                </Routes>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Route, Navigate, Routes } from \"react-router-dom\";\r\n\r\nconst Test =({isAuthenticated, component: Component, ...props}) => (\r\n    ( isAuthenticated )\r\n        ? ( <Component { ...props } /> )\r\n        : ( <Navigate to=\"/auth/login\" /> )\r\n)\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Routes>\r\n\r\n      <Route \r\n      exact \r\n      path=\"/\" \r\n      element={<Test isAuthenticated={isAuthenticated} component={Component}/>}  \r\n\r\n      { ...rest }/>\r\n    </Routes>\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Navigate, Routes } from 'react-router-dom';\r\n\r\nconst Test = ({ isAuthenticated, component: Component, ...props }) => {\r\n    return (\r\n        (isAuthenticated)\r\n            ? (<Navigate to=\"/\" />)\r\n            : (<Component {...props} />)\r\n    )\r\n}\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Routes>\r\n            <Route\r\n                path=\"/*\"\r\n                element={<Test isAuthenticated={isAuthenticated} component={Component} />}\r\n                {...rest}\r\n            />\r\n        </Routes>\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import { getAuth, onAuthStateChanged } from \"@firebase/auth\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { login } from \"../actions/auth\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setchecking] = useState(true);\r\n    const [isLoggedin, setisLoggedin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const auth = getAuth();\r\n        onAuthStateChanged(auth,async (user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setisLoggedin(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setisLoggedin(false);\r\n            }\r\n            setchecking(false);\r\n        });\r\n    }, [dispatch, setchecking, setisLoggedin]);\r\n    if (checking) {\r\n        return <h1>Wait...</h1>;\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route\r\n                    path=\"/auth/*\"\r\n                    element={\r\n                        <PublicRoute\r\n                            component={AuthRouter}\r\n                            isAuthenticated={isLoggedin}\r\n                        />\r\n                    }\r\n                />\r\n\r\n                <Route\r\n                    path=\"/*\"\r\n                    element={\r\n                        <PrivateRoute\r\n                            component={JournalScreen}\r\n                            isAuthenticated={isLoggedin}\r\n\r\n                        />\r\n                    }\r\n                ></Route>\r\n\r\n\r\n            </Routes>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './components/store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n           <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n\n  <JournalApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}